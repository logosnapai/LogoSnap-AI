import React, { useState } from "react";

// Local memory-only purchase simulation
const Purchase = ({ onPurchaseComplete }) => {
  const [loading, setLoading] = useState(false);
  const [message, setMessage] = useState("");

  const handlePurchase = async () => {
    setLoading(true);
    setMessage("");

    try {
      // Simulate purchase process (memory-only)
      await new Promise((resolve) => setTimeout(resolve, 1000));

      setMessage("Purchase successful!");
      onPurchaseComplete?.(); // Callback to parent component
    } catch (error) {
      console.error("Purchase error:", error);
      setMessage("Purchase failed. Try again.");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="purchase-container" style={styles.container}>
      <h2 style={styles.header}>Purchase Premium</h2>
      <button
        onClick={handlePurchase}
        disabled={loading}
        style={styles.button}
      >
        {loading ? "Processing..." : "Complete Purchase"}
      </button>
      {message && <p style={styles.message}>{message}</p>}
    </div>
  );
};

const styles = {
  container: {
    display: "flex",
    flexDirection: "column",
    alignItems: "center",
    padding: "20px",
  },
  header: {
    marginBottom: "15px",
    fontSize: "1.5rem",
    color: "#fff",
  },
  button: {
    background: "linear-gradient(to right, #ff6600, #ff3300)", // Dark orange gradient
    color: "#fff",
    border: "none",
    borderRadius: "12px",
    padding: "10px 20px",
    cursor: "pointer",
    fontSize: "1rem",
  },
  message: {
    marginTop: "15px",
    color: "#fff",
    fontSize: "1rem",
  },
};

export default Purchase;
